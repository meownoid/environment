#!/usr/bin/env sh
# find-prefixes: find paths beneath ROOT and emit unique directory prefixes matching PATTERN.
# Examples:
#   find-prefixes ~/Library app-name
#   find-prefixes /var/log error
set -e
set -o pipefail
set -o nounset

if [ "$#" -lt 2 ]; then
    echo "Usage: find_prefixes ROOT PATTERN"
    exit 1
fi

PREFIXES_FILTER_SCRIPT=$(cat <<'PYTHON'
import os
import sys
from dataclasses import dataclass, field


@dataclass
class Node:
    children: dict[str, "Node"] = field(default_factory=dict)
    end: bool = False


class PathPrefixTree:
    def __init__(self):
        self.root = Node()

    def add(self, prefix: str) -> bool:
        if not prefix:
            return False

        current = self.root

        for part in prefix.split(os.sep):
            if current.end:
                return False

            if part in current.children:
                current = current.children[part]
            else:
                new_node = Node()
                current.children[part] = new_node
                current = new_node

        if current.end:
            return False

        current.end = True

        return True


tree = PathPrefixTree()
for line in sys.stdin:
    path = line.rstrip()
    if tree.add(path):
        sys.stdout.write(path)
        sys.stdout.write("\n")
        sys.stdout.flush()
PYTHON
)

find "${1}" 2>/dev/null \
    | grep -i "${2}" \
    | python3 -c "${PREFIXES_FILTER_SCRIPT}" \
    | grep -i "${2}"
